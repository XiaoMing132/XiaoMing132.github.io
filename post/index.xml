<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 永远相信美好的事情即将发生</title>
    <link>https://XiaoMing132.github.io/post/</link>
    <description>Recent content in Posts on 永远相信美好的事情即将发生</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Sep 2022 20:09:24 +0800</lastBuildDate><atom:link href="https://XiaoMing132.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Frp自建内网穿透</title>
      <link>https://XiaoMing132.github.io/post/frp/</link>
      <pubDate>Fri, 09 Sep 2022 20:09:24 +0800</pubDate>
      
      <guid>https://XiaoMing132.github.io/post/frp/</guid>
      <description>ffrp是一个内网穿透的软件，可以自己配置相对于其他的穿透软件更为强大，客户端和服务端均需要安装frp，该教程需要一台linux服务器
注意:若复制该教程上的代码到服务器，请删除代码之后的#号的注释信息，因为服务器可能会无法识别，最好客户端上的注释也一并删掉 1:首先从github上下载frp软件 https://github.com/fatedier/frp/releases
2:下载玩下来后后解压可以得到好几个文件，以c结尾的为客户端的，以s结尾的为服务端的，保留对应的就是了，其他的可以删掉 3:配置服务端,使用vim frpc.ini查看frpc.ini配置文件 [common] bind_port = 7000 ~ 表示frp绑定本机7000端口，可自行修改，注意：防火墙需要放行绑定的端口
3:在后台启动frp服务端 ./frps -c frpc.ini &amp;amp;
4:在客户端修改客户端配置文件frpc.ini：在客户端使用vim frpc.ini [common] server_addr = 服务器地址 server_port = 服务器端口 ~
5:客户端开启frp连接服务器 ./frpc -c frpc.ini
6:此时客户端已经与服务端连接成功了，接下来我们配置下仪表盘，当然这个不是必须的，你们可以忽略这部配置。配置也很简单，分别在服务端frps.ini和客户端frpc.ini配置文件下添加如下 [common] bind_port = 7000 dashboard_port = 7500 #服务端仪表面板的端口 dashboard_user = admin #仪表盘登录名 dashboard_pwd = admin #仪表盘登录密码
7:接下来使用仪表盘端口进行访问了 http://你的IP地址:仪表盘端口 提示:不使用仪表盘的话可以忽略 6 7 步
8:修改客户端frpc.ini给客户端配置一个tcp通道穿透到ssh服务 [common] server_addr = 服务器地址 server_port = 服务器端口
[ssh] #通道名字 type = tcp local_ip = 127.</description>
    </item>
    
    <item>
      <title>Atufa</title>
      <link>https://XiaoMing132.github.io/post/atufa/</link>
      <pubDate>Fri, 09 Sep 2022 12:00:22 +0800</pubDate>
      
      <guid>https://XiaoMing132.github.io/post/atufa/</guid>
      <description></description>
    </item>
    
    <item>
      <title>使用 hugo &#43; github 搭建一个个人的博客</title>
      <link>https://XiaoMing132.github.io/post/albert/</link>
      <pubDate>Fri, 09 Sep 2022 11:31:53 +0800</pubDate>
      
      <guid>https://XiaoMing132.github.io/post/albert/</guid>
      <description>hugo + github 搭建个人博客还算比较简单，步骤呢百度几乎也可以查到，接下来以我的经验带大家搭建一个静态的个人博客
1:首先访问hugo下载对应的包进行安装 https://github.com/gohugoio/hugo/releases
2:本人用的是ubuntu系统下载的是deb的包，下载完成后找到对应的文件使用dpkg命令安装hugo dpkg &amp;ndash;install hugo_0.102.3_Linux-64bit.deb
3:安装完成创建一个自己的博客目录 hugo new site MyBlog
4:创建完后因为我们是没有主题的，也就是没有模板的，所以说要从网上下载一个主题，访问一下网站下载主题 https://themes.gohugo.io/
5:我这里下的是一个m10c的主题，下载完后需要将主题放到MyBlog/theme/下,主题配置好后使用命令创建一个内容，注意hugo使用的是md文档 hugo new post/test.md
6:创建完后可以编辑test.md写自己文档，接下来可以开启本地服务查看预览了,注意要在MyBlog下执行命令 hugo server -t mytheme &amp;ndash;buildDrafts
7:接下来我们要将本地的博客部署到github上，首先要在github上创建一个自己的仓库，仓库名称必须为 你的名称.github.io 否则后面会出错 8:接下来我们首先要使用hugo命令创建一个本地仓库，同样也要在MyBlog目录下 hugo &amp;ndash;theme=mytheme &amp;ndash;baseUrl=&amp;ldquo;你的仓库地址&amp;rdquo; &amp;ndash;buildDrafts
9:执行上条命令后会在MyBlog目录下会生成一个public文件，这个就是一个本地的仓库，现在我们使用git命令绑定远程仓库以便以后push上去 git remote add origin &amp;ldquo;你的仓库地址&amp;rdquo;
10:接下来切换到public目录就可以push到github上了,提交时要输入github用户名和密码 cd public/ &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;ldquo;commit&amp;rdquo; &amp;amp;&amp;amp; git push -u origin master
11:现在完成了访问你的仓库地址就可以查看了 https://仓库名
12:如果后续要增加内容上去到github重复5 8 10步骤</description>
    </item>
    
  </channel>
</rss>
